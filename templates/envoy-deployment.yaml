apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "envoy.name" . }}
  labels:
    app: {{ template "envoy.name" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.envoy.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "envoy.name" . }}
      release: {{ .Release.Name }}
  strategy:
{{ .Values.envoy.strategy | indent 4 }}
  template:
    metadata:
      labels:
        app: {{ template "envoy.name" . }}
        release: {{ .Release.Name }}
        component: controller
      {{- if .Values.envoy.podLabels }}
        ## Custom pod labels
        {{- range $key, $value := .Values.envoy.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/envoy-configmap.yaml") . | sha256sum }}
      {{- if .Values.envoy.podAnnotations }}
        ## Custom pod annotations
        {{- range $key, $value := .Values.envoy.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      securityContext:
{{ toYaml .Values.envoy.securityContext | indent 8 }}
{{- if .Values.envoy.priorityClassName }}
      priorityClassName: "{{ .Values.envoy.priorityClassName }}"
{{- end }}
      terminationGracePeriodSeconds: {{ .Values.envoy.terminationGracePeriodSeconds }}
      containers:
        - name: envoy
          image: "{{ .Values.envoy.image.repository }}:{{ .Values.envoy.image.tag }}"
          imagePullPolicy: {{ .Values.envoy.image.pullPolicy }}
          command:
{{ toYaml .Values.envoy.command | indent 12 }}
          args:
{{ toYaml .Values.envoy.args | indent 12 }}
          ports:
{{- with .Values.envoy.ports }}
  {{- range $key, $port := . }}
            - name: {{ $key }}
{{ toYaml $port | indent 14 }}
  {{- end }}
{{- end }}

          livenessProbe:
{{ toYaml .Values.envoy.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.envoy.readinessProbe | indent 12 }}
          env:
            {{- if .Values.usePassword }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "redis-cluster.secretName" . }}
                  key: {{ template "redis-cluster.secretPasswordKey" . }}
            {{- end }}
          {{- range $key, $value := .Values.envoy.env }}
            - name: {{ $key | upper | replace "." "_" }}
              value: {{ $value | quote }}
          {{- end }}
          resources:
{{ toYaml .Values.envoy.resources | indent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
          {{- range $key, $value := .Values.envoy.secretMounts }}
            - name: {{ $key }}
              mountPath: {{ $value.mountPath }}
          {{- end }}

    {{- with .Values.envoy.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.envoy.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.envoy.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "envoy.name" . }}
      {{- range $key, $value := .Values.envoy.secretMounts }}
        - name: {{ $key }}
          secret:
            secretName: {{ $value.secretName }}
            defaultMode: {{ $value.defaultMode }}
      {{- end }}